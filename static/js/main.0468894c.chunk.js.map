{"version":3,"sources":["img sync /^/.*/.jpg$","img/pizza.jpg","img/sandwich.jpg","img/soup.jpg","components/Input.jsx","components/Feedback.jsx","components/Form.jsx","components/useValidation.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Input","props","dishContext","useContext","DishContext","state","onState","addToInputRef","onAddToInputRef","handleChanging","onChanging","type","outputStyle","loading","onTagType","onTitle","onName","onType","onID","onClass","onPlaceHold","onStep","onAria","onRequired","onDataSizing","onMin","onMax","onPattern","onOptionNames","options","useMemo","name","ind","defaultValue","hidden","label","value","select","className","htmlFor","required","ref","onChange","input","placeholder","step","min","max","pattern","onKeyDown","range","style","React","memo","Feedback","msgResponse","onAddToFeedbackRef","Form","forwardRef","onSubmit","addToFeedbackRef","preparation_time","no_of_slices","diameter","spiciness_scale","slices_of_bread","forPizza","check","forSoup","forSandwich","onClick","useValidation","dispatch","arrayOfAllChecksValue","useRef","checkTimeLength","isValidTime","time","current","length","RegExp","test","onValidation","dataToCheck","size","Promise","reject","count","eachProp","valueWithoutSpaces","toString","split","join","push","payload","validator","isAlpha","isNumeric","createContext","initialState","val","sort","left","photoName","sizeOfSubmittedObject","validationFinished","finalResponse","reducer","action","validationSuccess","parseInt","App","useReducer","inputRef","feedbackRef","dataToSend","answerRef","dishesRef","photoRef","btnRef","useEffect","JSON","stringify","console","log","classList","add","forEach","el","remove","method","url","headers","data","disabled","axios","then","response","catch","error","message","elName","getAttribute","getOutputStyle","useCallback","inputVal","propName","unit","styles","getComputedStyle","target","padding","parseFloat","paddingLeft","paddingRight","elWidth","clientWidth","undefined","refObjMin","refObjMax","leftOutput","chooseDataToValidate","types","baseData","handleSubmit","a","preventDefault","dataToValidate","sizeOfObjectToValid","replayCheck","every","includes","Provider","onDispatch","onInputRef","alt","src","require","default","height","width","objectFit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0468894c.chunk.js","sourcesContent":["var map = {\n\t\"./pizza.jpg\": 150,\n\t\"./sandwich.jpg\": 151,\n\t\"./soup.jpg\": 152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 149;","export default __webpack_public_path__ + \"static/media/pizza.bba134e7.jpg\";","export default __webpack_public_path__ + \"static/media/sandwich.45375517.jpg\";","export default __webpack_public_path__ + \"static/media/soup.eae9ab6c.jpg\";","import React, {\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n} from \"react\";\r\nimport { DishContext } from \"../App\";\r\n\r\nfunction Input(props) {\r\n  const dishContext = useContext(DishContext);\r\n  const state = dishContext.onState;\r\n  const addToInputRef = dishContext.onAddToInputRef;\r\n  const handleChanging = dishContext.onChanging;\r\n  const { type, outputStyle, loading } = state;\r\n\r\n  const {\r\n    onTagType,\r\n    onTitle,\r\n    onName,\r\n    onType,\r\n    onID,\r\n    onClass,\r\n    onPlaceHold,\r\n    onStep,\r\n    onAria,\r\n    onRequired,\r\n    onDataSizing,\r\n    onMin,\r\n    onMax,\r\n    onPattern,\r\n    onOptionNames,\r\n  } = props;\r\n\r\n  const options = useMemo(() => {\r\n    if (onTagType === \"select\") {\r\n      return [...onOptionNames].map((name, ind) => {\r\n        if (name === \"default\") {\r\n          return (\r\n            <option defaultValue hidden label=\" \" key={ind}>\r\n              select an option\r\n            </option>\r\n          );\r\n        } else {\r\n          return (\r\n            <option value={name} key={ind}>\r\n              {name}\r\n            </option>\r\n          );\r\n        }\r\n      });\r\n    } else {\r\n      return false;\r\n    }\r\n  }, [type]);\r\n\r\n  const select = useMemo(() => {\r\n    return (\r\n      <div className=\"form-group input-cont\">\r\n        <div className=\"input-block\">\r\n          <label htmlFor={onName}>{onTitle}</label>\r\n          <select\r\n            className={onClass}\r\n            name={onName}\r\n            aria-label={onAria}\r\n            id={onID}\r\n            required={onRequired}\r\n            ref={addToInputRef}\r\n            value={state[onName][\"val\"]}\r\n            onChange={handleChanging}\r\n          >\r\n            {options}\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [type, loading]);\r\n\r\n  const input = useMemo(() => {\r\n    return (\r\n      <div className=\"form-group input-cont\">\r\n        <div className=\"input-block\">\r\n          <label htmlFor={onName}>{onTitle}</label>\r\n          <input\r\n            type={onType}\r\n            placeholder={onPlaceHold}\r\n            className={onClass}\r\n            name={onName}\r\n            aria-label={onAria}\r\n            id={onID}\r\n            step={onStep}\r\n            required={onRequired}\r\n            data-sizing={onDataSizing}\r\n            min={onMin}\r\n            max={onMax}\r\n            pattern={onPattern}\r\n            ref={addToInputRef}\r\n            value={state[onName][\"val\"]}\r\n            onChange={handleChanging}\r\n            onKeyDown={handleChanging}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [state]);\r\n\r\n  const range = useMemo(() => {\r\n    return (\r\n      <div className=\"form-group input-cont\">\r\n        <div className=\"input-block\">\r\n          <label htmlFor={onName}>{onTitle}</label>\r\n          <input\r\n            type={onType}\r\n            placeholder={onPlaceHold}\r\n            className={onClass}\r\n            name={onName}\r\n            aria-label={onAria}\r\n            id={onID}\r\n            step={onStep}\r\n            required={onRequired}\r\n            data-sizing={onDataSizing}\r\n            min={onMin}\r\n            max={onMax}\r\n            pattern={onPattern}\r\n            ref={addToInputRef}\r\n            value={state[onName][\"val\"]}\r\n            onChange={handleChanging}\r\n            onKeyDown={handleChanging}\r\n          />\r\n          <output className=\"bubble\" style={outputStyle}>\r\n            {state[onName][\"val\"]}\r\n          </output>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, [state]);\r\n\r\n  return (\r\n    <>\r\n      {onTagType === \"input\" ? input : onTagType === \"select\" ? select : range}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default React.memo(Input);\r\n","import React from \"react\";\r\n\r\nfunction Feedback({ msgResponse, onAddToFeedbackRef }) {\r\n  return (\r\n    <div className=\"invalid-feedback\" ref={onAddToFeedbackRef}>\r\n      {msgResponse === \"ok\" ? \"\" : msgResponse}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(Feedback);\r\n","import React, { useContext } from \"react\";\r\nimport { DishContext } from \"../App\";\r\nimport Input from \"./Input\";\r\nimport Feedback from \"./Feedback\";\r\n\r\nconst Form = React.forwardRef(({ onType, onSubmit }, ref) => {\r\n  const dishContext = useContext(DishContext);\r\n  const { addToFeedbackRef } = dishContext.onAddToFeedbackRef;\r\n  const state = dishContext.onState;\r\n  const {\r\n    name,\r\n    preparation_time,\r\n    type,\r\n    no_of_slices,\r\n    diameter,\r\n    spiciness_scale,\r\n    slices_of_bread,\r\n  } = state;\r\n\r\n  const forPizza = (\r\n    <div>\r\n      <Input\r\n        onTagType=\"input\"\r\n        onTitle=\"No of slices\"\r\n        onName=\"no_of_slices\"\r\n        onType=\"number\"\r\n        onID=\"no_of_slices\"\r\n        onClass=\"form-control\"\r\n        onPlaceHold={null}\r\n        onStep={1}\r\n        onAria=\"no_of_slices\"\r\n        onRequired={onType === \"pizza\" ? true : false}\r\n        onDataSizing={null}\r\n        onMin={1}\r\n        onMax={null}\r\n      />\r\n      <Feedback\r\n        msgResponse={no_of_slices.check}\r\n        onAddToFeedbackRef={addToFeedbackRef}\r\n      />\r\n      <Input\r\n        onTagType=\"input\"\r\n        onTitle=\"diameter\"\r\n        onName=\"diameter\"\r\n        onType=\"number\"\r\n        onID=\"diameter\"\r\n        onClass=\"form-control\"\r\n        onPlaceHold={null}\r\n        onStep={0.1}\r\n        onAria=\"diameter\"\r\n        onRequired={onType === \"pizza\" ? true : false}\r\n        onDataSizing={null}\r\n        onMin={0.1}\r\n        onMax={null}\r\n      />\r\n      <Feedback\r\n        msgResponse={diameter.check}\r\n        onAddToFeedbackRef={addToFeedbackRef}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const forSoup = (\r\n    <div>\r\n      <Input\r\n        onTagType=\"range\"\r\n        onTitle=\"Spiciness scale\"\r\n        onName=\"spiciness_scale\"\r\n        onType=\"range\"\r\n        onID=\"spiciness_scale\"\r\n        onClass=\"form-control form-control-range\"\r\n        onPlaceHold={null}\r\n        onStep={1}\r\n        onAria=\"spiciness_scale\"\r\n        onRequired={onType === \"soup\" ? true : false}\r\n        onDataSizing=\"px\"\r\n        onMin={1}\r\n        onMax={10}\r\n      />\r\n\r\n      <Feedback\r\n        msgResponse={spiciness_scale.check}\r\n        onAddToFeedbackRef={addToFeedbackRef}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const forSandwich = (\r\n    <div>\r\n      <Input\r\n        onTagType=\"input\"\r\n        onTitle=\"No of slices\"\r\n        onName=\"slices_of_bread\"\r\n        onType=\"number\"\r\n        onID=\"slices_of_bread\"\r\n        onClass=\"form-control\"\r\n        onPlaceHold={null}\r\n        onStep={1}\r\n        onAria=\"slices_of_bread\"\r\n        onRequired={onType === \"sandwich\" ? true : false}\r\n        onDataSizing={null}\r\n        onMin={1}\r\n        onMax={null}\r\n      />\r\n      <Feedback\r\n        msgResponse={slices_of_bread.check}\r\n        onAddToFeedbackRef={addToFeedbackRef}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <form id=\"dishes-form\">\r\n      <div className=\"row center\">\r\n        <Input\r\n          onTagType=\"input\"\r\n          onTitle=\"Dish name\"\r\n          onName=\"name\"\r\n          onType=\"text\"\r\n          onID=\"name\"\r\n          onClass=\"form-control\"\r\n          onPlaceHold=\"Type dish name\"\r\n          onStep={null}\r\n          onAria=\"name\"\r\n          onRequired={true}\r\n          onDataSizing={null}\r\n          onMin={null}\r\n          onMax={null}\r\n          onPattern={null}\r\n        />\r\n        <Feedback\r\n          msgResponse={name.check}\r\n          onAddToFeedbackRef={addToFeedbackRef}\r\n        />\r\n\r\n        <Input\r\n          onTagType=\"input\"\r\n          onTitle=\"Preparation time\"\r\n          onName=\"preparation_time\"\r\n          onType=\"time\"\r\n          onID=\"preparation_time\"\r\n          onClass=\"form-control\"\r\n          onPlaceHold={null}\r\n          onStep={1}\r\n          onAria=\"preparation_time\"\r\n          onRequired={true}\r\n          onDataSizing={null}\r\n          onMin={null}\r\n          onMax={null}\r\n          onPattern={\"[0-9]{2}:[0-9]{2}:[0-9]{2}\"}\r\n        />\r\n        <Feedback\r\n          msgResponse={preparation_time.check}\r\n          onAddToFeedbackRef={addToFeedbackRef}\r\n        />\r\n\r\n        <Input\r\n          onTagType=\"select\"\r\n          onTitle=\"Type\"\r\n          onName=\"type\"\r\n          onID=\"type\"\r\n          onClass=\"form-control form-control-lg\"\r\n          onOptionNames={[\"default\", \"pizza\", \"soup\", \"sandwich\"]}\r\n          onPlaceHold={null}\r\n          onAria=\"type\"\r\n          onRequired={true}\r\n        />\r\n        <Feedback\r\n          msgResponse={type.check}\r\n          onAddToFeedbackRef={addToFeedbackRef}\r\n        />\r\n        {onType === \"pizza\"\r\n          ? forPizza\r\n          : onType === \"soup\"\r\n          ? forSoup\r\n          : onType === \"sandwich\"\r\n          ? forSandwich\r\n          : \"\"}\r\n      </div>\r\n      <div className=\"row center\">\r\n        <div className=\"buttons col\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-check\"\r\n            ref={ref}\r\n            onClick={onSubmit}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n});\r\n\r\nexport default React.memo(Form);\r\n","import { useRef } from \"react\";\r\nimport validator from \"validator\";\r\n\r\n\r\nconst useValidation = (dispatch) => {\r\n  const arrayOfAllChecksValue = useRef([]);\r\n  const checkTimeLength = useRef();\r\n\r\n\r\n  // check time format\r\n  // 3 groups of 2 character separated by : each character must be a digit contained in that specific ranges\r\n  const isValidTime = (time) => {\r\n    checkTimeLength.current = \"\";\r\n    if(time.length < 8){\r\n      time = time + ':00'\r\n    } \r\n\r\n    if(time < \"00:15:00\"){\r\n      checkTimeLength.current =\"We need at least 15 min to prepare the dish!\";\r\n    }\r\n    const regexpAll = new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/);\r\n    return regexpAll.test(time);\r\n  };\r\n\r\n  // main validation function\r\n  const onValidation = (dataToCheck, size) => {\r\n    arrayOfAllChecksValue.current = [];\r\n    return new Promise((resolve, reject) => {\r\n      let count = 0;\r\n      for (let eachProp in dataToCheck) {\r\n        count++;\r\n\r\n        // get rid of whitespaces\r\n        const valueWithoutSpaces = dataToCheck[eachProp][\"val\"].toString().split(\" \").join(\"\");\r\n\r\n        if (valueWithoutSpaces.length <= 0) {\r\n          arrayOfAllChecksValue.current.push(false);\r\n          dispatch({\r\n            type: `${eachProp}_check`,\r\n            payload: \"This field has to be filled in\",\r\n          });\r\n          resolve(arrayOfAllChecksValue.current);\r\n        } else {\r\n        // run validation accordingly to the input 'type' ('sort' in state)\r\n        switch (dataToCheck[eachProp][\"sort\"]) {\r\n          case \"text\":\r\n            if (!validator.isAlpha(valueWithoutSpaces)) {\r\n              arrayOfAllChecksValue.current.push(false);\r\n              dispatch({\r\n                type: `${eachProp}_check`,\r\n                payload: \"Please use only letters\",\r\n              });\r\n            } else {\r\n              arrayOfAllChecksValue.current.push(true);\r\n              dispatch({ type: `${eachProp}_check`, payload: \"ok\" });\r\n            }\r\n            break;\r\n\r\n          case \"intNumber\":\r\n          case \"floatNumber\":\r\n            if (!validator.isNumeric(valueWithoutSpaces)) {\r\n              arrayOfAllChecksValue.current.push(false);\r\n              dispatch({\r\n                type: `${eachProp}_check`,\r\n                payload: \"Please use only numbers\",\r\n              });\r\n            } else {\r\n              arrayOfAllChecksValue.current.push(true);\r\n              dispatch({ type: `${eachProp}_check`, payload: \"ok\" });\r\n            }\r\n            break;\r\n\r\n          case \"time\":\r\n            if (!isValidTime(valueWithoutSpaces)) {\r\n              arrayOfAllChecksValue.current.push(false);\r\n              dispatch({\r\n                type: `${eachProp}_check`,\r\n                payload: \"Please use only numbers in time format\",\r\n              });\r\n            } else if(isValidTime(valueWithoutSpaces) && checkTimeLength.current !== \"\") {\r\n              arrayOfAllChecksValue.current.push(false);\r\n              dispatch({ type: `${eachProp}_check`, payload: checkTimeLength.current });\r\n            } else {\r\n              arrayOfAllChecksValue.current.push(true);\r\n              dispatch({ type: `${eachProp}_check`, payload: \"ok\" });\r\n            }\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n        }\r\n\r\n\r\n        if (count >= size) {\r\n          resolve(arrayOfAllChecksValue.current);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n \r\n\r\n  return { onValidation };\r\n};\r\n\r\nexport default useValidation;","import React, { useEffect, useReducer, useRef, useCallback } from \"react\";\nimport Form from \"./components/Form\";\nimport \"./App.css\";\nimport \"./css/style.css\";\nimport useValidation from \"./components/useValidation\";\nimport axios from \"axios\";\n\nexport const DishContext = React.createContext();\n\n// 'val' = value, 'sort' = type of input, 'check' = prop for message got back after validation\nconst initialState = {\n  name: { val: \"\", sort: \"text\", check: \"\" },\n  preparation_time: { val: \"00:15:00\", sort: \"time\", check: \"\" },\n  type: { val: \"\", sort: \"text\", check: \"\" },\n  no_of_slices: { val: 1, sort: \"intNumber\", check: \"\" },\n  diameter: { val: 0.1, sort: \"floatNumber\", check: \"\" },\n  spiciness_scale: { val: 1, sort: \"intNumber\", check: \"\" },\n  slices_of_bread: { val: 1, sort: \"intNumber\", check: \"\" },\n  outputStyle: { left: \"0%\" },\n  photoName: \"\",\n  sizeOfSubmittedObject: 0,\n  validationFinished: \"not\",\n  finalResponse: \"\",\n  loading: false,\n  id: 0,\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"name\":\n      return { ...state, name: { ...state.name, val: action.payload } };\n\n    case \"name_check\":\n      return {\n        ...state,\n        name: { ...state.name, check: action.payload },\n      };\n\n    case \"preparation_time\":\n      return {\n        ...state,\n        preparation_time: { ...state.preparation_time, val: action.payload },\n      };\n\n    case \"preparation_time_check\":\n      return {\n        ...state,\n        preparation_time: { ...state.preparation_time, check: action.payload },\n      };\n\n    case \"type\":\n      return { ...state, type: { ...state.type, val: action.payload } };\n\n    case \"type_check\":\n      return { ...state, type: { ...state.type, check: action.payload } };\n\n    case \"no_of_slices\":\n      return {\n        ...state,\n        no_of_slices: { ...state.no_of_slices, val: action.payload },\n      };\n\n    case \"no_of_slices_check\":\n      return {\n        ...state,\n        no_of_slices: { ...state.no_of_slices, check: action.payload },\n      };\n\n    case \"diameter\":\n      return { ...state, diameter: { ...state.diameter, val: action.payload } };\n\n    case \"diameter_check\":\n      return {\n        ...state,\n        diameter: { ...state.diameter, check: action.payload },\n      };\n\n    case \"spiciness_scale\":\n      return {\n        ...state,\n        spiciness_scale: { ...state.spiciness_scale, val: action.payload },\n      };\n\n    case \"spiciness_scale_check\":\n      return {\n        ...state,\n        spiciness_scale: { ...state.spiciness_scale, check: action.payload },\n      };\n\n    case \"slices_of_bread\":\n      return {\n        ...state,\n        slices_of_bread: { ...state.slices_of_bread, val: action.payload },\n      };\n\n    case \"slices_of_bread_check\":\n      return {\n        ...state,\n        slices_of_bread: { ...state.slices_of_bread, check: action.payload },\n      };\n\n    case \"validationFinished\":\n      return { ...state, validationFinished: action.payload };\n\n    case \"validationSuccess\":\n      return { ...state, validationSuccess: action.payload };\n\n    case \"sizeOfSubmittedObject\":\n      return { ...state, sizeOfSubmittedObject: action.payload };\n\n    case \"photo\":\n      return { ...state, photoName: action.payload };\n\n    case \"outputStyle\":\n      return {\n        ...state,\n        outputStyle: { ...state.outputStyle, left: action.payload },\n      };\n\n    case \"finalResponse\":\n      return { ...state, finalResponse: action.payload };\n\n    case \"loading\":\n      return { ...state, loading: action.payload };\n\n    case \"idIncrement\":\n      // return { ...state, id: parseInt(state.id) + parseInt(action.payload) };\n      return { ...state, id: parseInt(state.id) + 1 };\n\n    case \"reset\":\n      return {\n        ...state,\n        name: { ...state.name, val: \"\" },\n        preparation_time: { ...state.preparation_time, val: \"00:15:00\" },\n        type: { ...state.type, val: \"\" },\n        no_of_slices: { ...state.no_of_slices, val: 1 },\n        diameter: { ...state.diameter, val: 0.1 },\n        slices_of_bread: { ...state.slices_of_bread, val: 1 },\n        spiciness_scale: { ...state.spiciness_scale, val: 1 },\n        photoName: \"\",\n      };\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  // custom hook for validation of data form\n  const { onValidation } = useValidation(dispatch);\n\n  // array of inputs' refs\n  const inputRef = useRef([]);\n\n  // an array of feedbackRef/ 'invalid-feedback' div's refs\n  const feedbackRef = useRef([]);\n\n  const dataToSend = useRef({});\n\n  // refs to particular divs\n  const answerRef = useRef();\n  const dishesRef = useRef();\n  const photoRef = useRef();\n\n  // ref to submit btn\n  const btnRef = useRef();\n\n  const {\n    name,\n    preparation_time,\n    type,\n    no_of_slices,\n    diameter,\n    spiciness_scale,\n    slices_of_bread,\n    photoName,\n    validationFinished,\n    finalResponse,\n    outputStyle,\n    loading,\n    id,\n  } = state;\n\n\n  useEffect(()=>{\n  //  console.log(id); \n \n  })\n\n  // final step with API Post Request\n  useEffect(() => {\n    if (validationFinished === \"ok\") {\n      dataToSend.current = {\n        ...dataToSend.current,\n        id: id,\n      };;\n\n      dataToSend.current = JSON.stringify(dataToSend.current);\n\n      console.log(\"Data to be send:\")\n      console.log(dataToSend.current);\n\n      photoRef.current.classList.add(\"hidden\", \"no-display\");\n\n      inputRef.current.forEach((el) => {\n        el.classList.remove(\"inCorrect\");\n        el.classList.add(\"correct\");\n      });\n      feedbackRef.current.forEach((el) => {\n        el.classList.add(\"afterValidation\");\n      });\n\n      const options = {\n        method: \"POST\",\n        url: \"https://frosty-wood-6558.getsandbox.com:443/dishes\",\n        // url: \"https://jsonplaceholder.typicode.com/posts\",\n        headers: { \"Content-type\": \"application/json\" },\n        data: dataToSend.current,\n      };\n\n      answerRef.current.classList.remove(\"bad\");\n      answerRef.current.classList.add(\"wait\");\n\n      dispatch({ type: \"loading\", payload: true });\n\n      // prevent user from sending the form again twice by clicking twice on the submit button\n      btnRef.current.disabled = true;\n      axios(options)\n        .then((response) => {\n          console.log(response.data);\n          dataToSend.current = \"\";\n          dispatch({ type: \"loading\", payload: false });\n          answerRef.current.classList.remove(\"wait\");\n          answerRef.current.classList.add(\"fine\");\n          dispatch({ type: \"reset\", payload: \"\" });\n          dispatch({\n            type: \"finalResponse\",\n            payload: \"Your order has been sent succefully!\",\n          });\n  \n          btnRef.current.disabled = false;\n        })\n        .catch((error) => {\n          console.log(error.message);\n          dataToSend.current = \"\";\n          dispatch({ type: \"loading\", payload: false });\n          answerRef.current.classList.remove(\"wait\");\n          answerRef.current.classList.add(\"bad\");\n          dispatch({ type: \"finalResponse\", payload: error.message });\n          btnRef.current.disabled = false;\n        });\n    }\n  }, [id]);\n\n  // increase ID before sending data providing that everthing is right with form data\n  useEffect(() => {\n    if (validationFinished === \"ok\") {\n      dispatch({ type: \"idIncrement\", payload: 1 });\n    } else if (validationFinished === \"error\") {\n      answerRef.current.classList.remove(\"fine\");\n      answerRef.current.classList.add(\"bad\");\n      inputRef.current.forEach((el) => {\n        const elName = el.getAttribute(\"name\");\n        if (state[elName][\"check\"] === \"ok\") {\n          el.classList.remove(\"inCorrect\");\n          el.classList.add(\"correct\");\n        } else {\n          el.classList.remove(\"correct\");\n          el.classList.add(\"inCorrect\");\n        }\n      });\n\n      dispatch({ type: \"finalResponse\", payload: \"There is a mistake!\" });\n    }\n  }, [validationFinished]);\n\n  // set dynamically the bubble's 'left' attribute\n  const getOutputStyle = useCallback(\n    (inputVal, el, propName, unit) => {\n      const styles = getComputedStyle(el.target);\n      const padding =\n        parseFloat(styles.paddingLeft) + parseFloat(styles.paddingRight);\n      const elWidth = parseFloat(el.target.clientWidth - padding);\n\n      if (el !== undefined && el !== null) {\n        let refObjMin = parseInt(el.target.getAttribute(\"min\") - 1);\n        let refObjMax = parseInt(el.target.getAttribute(\"max\"));\n        if (refObjMin < 0) refObjMin = refObjMin * -1;\n        const leftOutput =\n          (parseInt(inputVal) + refObjMin) / (refObjMin + refObjMax) + unit;\n        dispatch({\n          type: \"outputStyle\",\n          payload: elWidth * parseFloat(leftOutput) - 7,\n        });\n        return false;\n      }\n    },\n    [spiciness_scale, outputStyle]\n  );\n\n  const handleChanging = (e) => {\n    // clean the finalResponse text while ordering a new product\n    if (validationFinished !== \"not\") {\n      dispatch({ type: \"finalResponse\", payload: \"\" });\n    }\n\n    dispatch({ type: e.target.name, payload: e.target.value });\n\n    if (e.target.type === \"range\") {\n      getOutputStyle(e.target.value, e, e.target.name, \"px\");\n    }\n\n    // show the photo when the 'type' has been chosen\n    if (e.target.name === \"type\") {\n      photoRef.current.classList.remove(\"hidden\", \"no-display\");\n      switch (e.target.value) {\n        case \"pizza\":\n          dispatch({ type: \"photo\", payload: \"pizza\" });\n          break;\n        case \"soup\":\n          dispatch({ type: \"photo\", payload: \"soup\" });\n          break;\n        case \"sandwich\":\n          dispatch({ type: \"photo\", payload: \"sandwich\" });\n          break;\n        default:\n          dispatch({ type: \"photo\", payload: \"\" });\n          break;\n      }\n    }\n  };\n\n  const chooseDataToValidate = (types) => {\n    return new Promise((resolve, reject) => {\n      let dataToSend = {};\n      let baseData = { name, preparation_time, type };\n      switch (types) {\n        case \"pizza\":\n          dataToSend = { ...baseData, no_of_slices, diameter };\n          resolve(dataToSend);\n          break;\n        case \"soup\":\n          dataToSend = { ...baseData, spiciness_scale };\n          resolve(dataToSend);\n          break;\n        case \"sandwich\":\n          dataToSend = { ...baseData, slices_of_bread };\n          resolve(dataToSend);\n          break;\n        default:\n          dataToSend = { ...baseData };\n          resolve(dataToSend);\n          break;\n      }\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    dispatch({ type: \"validationFinished\", payload: \"not\" });\n    const dataToValidate = await chooseDataToValidate(type.val);\n    const sizeOfObjectToValid = Object.keys(dataToValidate).length;\n    dispatch({\n      type: \"sizeOfSubmittedObject\",\n      payload: sizeOfObjectToValid,\n    });\n    const replayCheck = await onValidation(dataToValidate, sizeOfObjectToValid);\n\n    // create an object to be sent\n    for (let eachProp in dataToValidate) {\n      dataToSend.current = {\n        ...dataToSend.current,\n        [eachProp]: dataToValidate[eachProp][\"val\"],\n      };\n    }\n\n    // if there are no errors in input fields\n    if (replayCheck.every((el) => el === true)) {\n      dispatch({ type: \"validationFinished\", payload: \"ok\" });\n    } else {\n      dispatch({ type: \"validationFinished\", payload: \"error\" });\n    }\n  };\n\n  // invalid-feedback refs' array\n  const addToFeedbackRef = useCallback((el) => {\n    if (el && !feedbackRef.current.includes(el)) {\n      feedbackRef.current.push(el);\n    }\n  }, []);\n\n  // input's array refs\n  const addToInputRef = useCallback((el) => {\n    if (el && !inputRef.current.includes(el)) {\n      inputRef.current.push(el);\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h2 className=\"title\">Hungry? Let's order a delicious meal!</h2>\n        <div className=\"dishes flex\" ref={dishesRef}>\n          <DishContext.Provider\n            value={{\n              onState: state,\n              onDispatch: dispatch,\n              onChanging: handleChanging,\n              onAddToInputRef: addToInputRef,\n              onInputRef: inputRef,\n              onAddToFeedbackRef: addToFeedbackRef,\n            }}\n          >\n            <Form onType={type.val} onSubmit={handleSubmit} ref={btnRef} />\n          </DishContext.Provider>\n          <div className=\"image hidden no-display\" ref={photoRef}>\n            <img\n              alt={photoName}\n              className=\"photo\"\n              src={\n                photoName !== \"\"\n                  ? require(`./img/${photoName}.jpg`).default\n                  : \"\"\n              }\n              style={{ height: \"auto\", width: \"100%\", objectFit: \"contain\" }}\n            />\n          </div>\n        </div>\n        <div className=\"answer\" ref={answerRef}>\n          {loading ? \"Wait...\" : finalResponse}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}